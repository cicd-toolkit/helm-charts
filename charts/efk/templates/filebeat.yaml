{{- if .Values.filebeat.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  labels:
    app: filebeat
    app.kubernetes.io/name: filebeat
    {{- include "efk.labels" . | nindent 4 }}
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      app: filebeat
  updateStrategy:
    type: {{ .Values.filebeat.updateStrategy }}
  template:
    metadata:
      labels:
        app: filebeat
        app.kubernetes.io/name: filebeat
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.Version }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/filebeat-config.yaml") . | sha256sum | trunc 63 }}
    spec:
      serviceAccount: logreader
      serviceAccountName: logreader
      containers:
      - name: filebeat
        image: {{ .Values.filebeat.image }}
        args:
        - "-e"
        - "-E"
        - "http.enabled=true"
        securityContext:
          runAsUser: 0
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kibana-password
                key: password
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                curl --fail 127.0.0.1:5066
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                filebeat test output
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "1000m"
            memory: "200Mi"
        volumeMounts:
        {{- range $path, $config := .Values.filebeat.config }}
        - name: filebeat-config
          mountPath: /usr/share/filebeat/{{ $path }}
          readOnly: true
          subPath: {{ $path }}
        {{- end }}
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        # Necessary when using autodiscovery; avoid mounting it otherwise
        # See: https://www.elastic.co/guide/en/beats/filebeat/7.8/configuration-autodiscover.html
        - name: varrundockersock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: elasticsearch-tls
          mountPath: /usr/share/filebeat/config/certs

          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: elasticsearch-tls
        secret:
          secretName: elasticsearch-tls
      - name: filebeat-config
        configMap:
          defaultMode: 0644
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: varrundockersock
        hostPath:
          path: /var/run/docker.sock
      - name: data
        hostPath:
          path: /var/lib/filebeat-{{ .Release.Namespace }}-data
          type: DirectoryOrCreate



{{- end -}}
